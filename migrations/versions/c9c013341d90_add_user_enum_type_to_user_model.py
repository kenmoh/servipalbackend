"""add user enum type to user model

Revision ID: c9c013341d90
Revises: b80aaa1de4af
Create Date: 2025-06-24 09:22:14.433018

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "c9c013341d90"
down_revision: Union[str, None] = "b80aaa1de4af"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    usertype = postgresql.ENUM(
        "CUSTOMER",
        "DISPATCH",
        "RESTAURANT_VENDOR",
        "MODERATOR",
        "LAUNDRY_VENDOR",
        "RIDER",
        "ADMIN",
        "STAFF",
        "SUPER_ADMIN",
        name="usertype",
    )
    usertype.create(op.get_bind(), checkfirst=True)

    op.execute(
        "ALTER TABLE users ALTER COLUMN user_type TYPE usertype USING user_type::usertype"
    )

    op.alter_column(
        "users",
        "user_type",
        existing_type=sa.VARCHAR(),
        type_=sa.Enum(
            "CUSTOMER",
            "DISPATCH",
            "MODERATOR",
            "RESTAURANT_VENDOR",
            "LAUNDRY_VENDOR",
            "RIDER",
            "ADMIN",
            "STAFF",
            "SUPER_ADMIN",
            name="usertype",
        ),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "user_type",
        existing_type=sa.Enum(
            "CUSTOMER",
            "MODERATOR",
            "DISPATCH",
            "RESTAURANT_VENDOR",
            "LAUNDRY_VENDOR",
            "RIDER",
            "ADMIN",
            "STAFF",
            "SUPER_ADMIN",
            name="usertype",
        ),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
