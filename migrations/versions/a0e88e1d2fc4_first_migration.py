"""first migration

Revision ID: a0e88e1d2fc4
Revises: 
Create Date: 2025-05-04 07:45:30.836279

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a0e88e1d2fc4"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categories",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "charges",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("payment_gate_way_fee", sa.Numeric(), nullable=False),
        sa.Column("value_added_tax", sa.Numeric(), nullable=False),
        sa.Column(
            "payout_charge_transaction_upto_5000_naira", sa.Numeric(), nullable=False
        ),
        sa.Column(
            "payout_charge_transaction_from_5001_to_50_000_naira",
            sa.Numeric(),
            nullable=False,
        ),
        sa.Column(
            "payout_charge_transaction_above_50_000_naira", sa.Numeric(), nullable=False
        ),
        sa.Column("stamp_duty", sa.Numeric(), nullable=False),
        sa.Column("base_delivery_fee", sa.Numeric(), nullable=False),
        sa.Column("delivery_fee_per_km", sa.Numeric(), nullable=False),
        sa.Column("delivery_commission_percentage", sa.Numeric(), nullable=False),
        sa.Column("food_laundry_commission_percentage", sa.Numeric(), nullable=False),
        sa.Column("product_commission_percentage", sa.Numeric(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("is_blocked", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("user_type", sa.String(), nullable=False),
        sa.Column(
            "account_status",
            sa.Enum("PENDING", "CONFIRMED", name="accountstatus"),
            nullable=False,
        ),
        sa.Column("dispatcher_id", sa.Uuid(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dispatcher_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "items",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "item_type",
            sa.Enum("FOOD", "PACKAGE", "LAUNDRY", "PRODUCT", name="itemtype"),
            nullable=False,
        ),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("price", sa.Numeric(), nullable=False),
        sa.Column("image_url", sa.String(), nullable=True),
        sa.Column("category_id", sa.Uuid(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "orders",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("order_number", sa.String(length=10), nullable=False),
        sa.Column("owner_id", sa.Uuid(), nullable=False),
        sa.Column("vendor_id", sa.Uuid(), nullable=False),
        sa.Column(
            "order_type",
            sa.Enum("PACKAGE", "FOOD", "LAUNDRY", name="ordertype"),
            nullable=False,
        ),
        sa.Column("total_price", sa.Numeric(), nullable=False),
        sa.Column("payment_link", sa.String(), nullable=True),
        sa.Column(
            "order_payment_status",
            sa.Enum(
                "FAILED",
                "PAID",
                "CANCELLED",
                "PENDING",
                "COMPLETED",
                "SUCCESSFUL",
                name="paymentstatus",
            ),
            nullable=False,
        ),
        sa.Column(
            "require_delivery",
            sa.Enum("PICKUP", "DELIVERY", name="requiredeliveryschema"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["vendor_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("order_number"),
    )
    op.create_table(
        "profile",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("business_name", sa.String(), nullable=True),
        sa.Column("bank_name", sa.String(), nullable=True),
        sa.Column("bank_account_number", sa.String(), nullable=True),
        sa.Column("business_address", sa.String(), nullable=True),
        sa.Column("business_registration_number", sa.String(), nullable=True),
        sa.Column("opening_hours", sa.DateTime(), nullable=True),
        sa.Column("closing_hours", sa.DateTime(), nullable=True),
        sa.Column("full_name", sa.String(), nullable=True),
        sa.Column("phone_number", sa.String(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("phone_number"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "refresh_tokens",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column("user_type", sa.String(), nullable=True),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("is_revoked", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_refresh_tokens_id"), "refresh_tokens", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_refresh_tokens_token"), "refresh_tokens", ["token"], unique=True
    )
    op.create_table(
        "wallets",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("balance", sa.Numeric(), nullable=False),
        sa.Column("escrow_balance", sa.Numeric(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "deliveries",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("order_id", sa.Uuid(), nullable=False),
        sa.Column("rider_id", sa.Uuid(), nullable=True),
        sa.Column("dispatch_id", sa.Uuid(), nullable=True),
        sa.Column("vendor_id", sa.Uuid(), nullable=True),
        sa.Column("sender_id", sa.Uuid(), nullable=True),
        sa.Column("image_url", sa.String(), nullable=True),
        sa.Column("pickup_coordinates", sa.ARRAY(sa.Float()), nullable=False),
        sa.Column("dropoff_coordinates", sa.ARRAY(sa.Float()), nullable=False),
        sa.Column(
            "delivery_status",
            sa.Enum(
                "PENDING",
                "IN_TRANSIT",
                "DELIVERED",
                "RECEIVED",
                "VENDOR_RECEIVED_LAUNDRY_ITEM",
                "CANCELLED",
                name="delivertystatus",
            ),
            nullable=False,
        ),
        sa.Column("delivery_fee", sa.Numeric(), nullable=False),
        sa.Column(
            "delivery_type",
            sa.Enum("MEAL", "LAUNDRY", "PACKAGE", name="deliverytype"),
            nullable=False,
        ),
        sa.Column("amount_due_dispatch", sa.Numeric(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dispatch_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.ForeignKeyConstraint(
            ["rider_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["vendor_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "order_items",
        sa.Column("order_id", sa.Uuid(), nullable=False),
        sa.Column("item_id", sa.Uuid(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["items.id"],
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.PrimaryKeyConstraint("order_id", "item_id"),
    )
    op.create_table(
        "transtions",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("wallet_id", sa.Uuid(), nullable=False),
        sa.Column("amount", sa.Numeric(), nullable=False),
        sa.Column(
            "transaction_type",
            sa.Enum("DEBIT", "CREDIT", name="transactiontype"),
            nullable=False,
        ),
        sa.Column(
            "payment_status",
            sa.Enum(
                "FAILED",
                "PAID",
                "CANCELLED",
                "PENDING",
                "COMPLETED",
                "SUCCESSFUL",
                name="paymentstatus",
            ),
            nullable=False,
        ),
        sa.Column("payment_link", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["wallet_id"],
            ["wallets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("transtions")
    op.drop_table("order_items")
    op.drop_table("deliveries")
    op.drop_table("wallets")
    op.drop_index(op.f("ix_refresh_tokens_token"), table_name="refresh_tokens")
    op.drop_index(op.f("ix_refresh_tokens_id"), table_name="refresh_tokens")
    op.drop_table("refresh_tokens")
    op.drop_table("profile")
    op.drop_table("orders")
    op.drop_table("items")
    op.drop_table("users")
    op.drop_table("charges")
    op.drop_table("categories")
    # ### end Alembic commands ###
