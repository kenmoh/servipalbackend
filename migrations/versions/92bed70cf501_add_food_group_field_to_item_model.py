"""add food_group field to item model

Revision ID: 92bed70cf501
Revises: 01a63a3daab2
Create Date: 2025-06-22 12:37:02.742324

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "92bed70cf501"
down_revision: Union[str, None] = "01a63a3daab2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. Create the enum type
    foodgroup = postgresql.ENUM(
        "APPETIZER", "MAIN_COURSE", "DESSERT", "OTHERS", name="foodgroup"
    )
    foodgroup.create(op.get_bind(), checkfirst=True)

    # 2. Add the column using the enum type
    op.add_column("items", sa.Column("food_group", foodgroup, nullable=True))

    # 3. (other constraints)
    op.create_unique_constraint(None, "profile", ["user_id"])
    op.create_unique_constraint(None, "profile_images", ["profile_id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "profile_images", type_="unique")
    op.drop_constraint(None, "profile", type_="unique")
    op.drop_column("items", "food_group")

    # Drop the enum type
    foodgroup_enum = postgresql.ENUM(
        "APPETIZER", "MAIN_COURSE", "DESSERT", "OTHERS", name="foodgroup"
    )
    foodgroup_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
