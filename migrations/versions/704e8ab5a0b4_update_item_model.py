"""update Item model

Revision ID: 704e8ab5a0b4
Revises: 1f8939dc1bd4
Create Date: 2025-05-05 06:04:59.956148

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "704e8ab5a0b4"
down_revision: Union[str, None] = "1f8939dc1bd4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "transactions",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("wallet_id", sa.Uuid(), nullable=False),
        sa.Column("amount", sa.Numeric(), nullable=False),
        sa.Column(
            "transaction_type",
            postgresql.ENUM(
                "DEBIT", "CREDIT", name="transactiontype", create_type=False
            ),
            nullable=False,
        ),
        sa.Column(
            "payment_status",
            postgresql.ENUM(
                "FAILED",
                "PAID",
                "CANCELLED",
                "PENDING",
                "COMPLETED",
                "SUCCESSFUL",
                name="paymentstatus",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("payment_link", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["wallet_id"],
            ["wallets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("transtions")
    op.add_column("items", sa.Column("sizes", sa.String(), nullable=True))
    op.add_column("items", sa.Column("colors", sa.ARRAY(sa.String()), nullable=True))
    op.add_column("items", sa.Column("stock", sa.Integer(), nullable=True))
    op.add_column("items", sa.Column("in_stock", sa.Boolean(), nullable=False))
    op.add_column("items", sa.Column("total_sold", sa.Integer(), nullable=True))
    op.add_column(
        "orders",
        sa.Column(
            # Make nullable if appropriate, or ensure default value
            "amount_due_vendor",
            sa.Numeric(),
            nullable=True,
        ),
    )  # Adjusted nullability

    # 1. Explicitly create the ENUM type if it doesn't exist
    op.execute(
        "CREATE TYPE orderstatus AS ENUM ('PENDING', 'DELIVERED', 'RECEIVED', 'CANCELLED', 'REJECTED')"
    )
    # 2. Add the column using the created ENUM type
    op.add_column(
        "orders",
        sa.Column(
            "order_status",
            postgresql.ENUM(
                "PENDING",
                "DELIVERED",
                # Set create_type=False here
                "RECEIVED",
                "CANCELLED",
                "REJECTED",
                name="orderstatus",
                create_type=False,
            ),
            nullable=True,
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("orders", "amount_due_vendor")
    op.drop_column("items", "total_sold")
    op.drop_column("items", "in_stock")
    op.drop_column("items", "stock")
    op.drop_column("items", "colors")
    op.drop_column("items", "sizes")
    op.create_table(
        "transtions",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("wallet_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("amount", sa.NUMERIC(), autoincrement=False, nullable=False),
        sa.Column(
            "transaction_type",
            postgresql.ENUM("DEBIT", "CREDIT", name="transactiontype"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "payment_status",
            postgresql.ENUM(
                "FAILED",
                "PAID",
                "CANCELLED",
                "PENDING",
                "COMPLETED",
                "SUCCESSFUL",
                name="paymentstatus",
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("payment_link", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["wallet_id"], ["wallets.id"], name="transtions_wallet_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="transtions_pkey"),
    )
    op.drop_table("transactions")
    # Drop the column first
    op.drop_column("orders", "order_status")
    # Then drop the type
    op.execute("DROP TYPE orderstatus")
    # ### end Alembic commands ###
