"""add Report, Message and MessageStatus v2

Revision ID: 63fd7fe3772c
Revises: 96cbc1b1862e
Create Date: 2025-06-26 19:48:29.597425

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '63fd7fe3772c'
down_revision: Union[str, None] = '96cbc1b1862e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reports',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=True),
    sa.Column('delivery_id', sa.Uuid(), nullable=True),
    sa.Column('complainant_id', sa.Uuid(), nullable=False),
    sa.Column('defendant_id', sa.Uuid(), nullable=False),
    sa.Column('report_type', sa.Enum('DAMAGED_ITEMS', 'WRONG_ITEMS', 'LATE_DELIVERY', 'RIDER_BEHAVIOUR', 'CUSTOMER_BEHAVIOUR', 'OTHERS', name='reporttype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('report_status', sa.Enum('PENDING', 'INVESTIGATING', 'RESOLVED', 'DISMISSED', name='issuestatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['complainant_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['defendant_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['delivery_id'], ['deliveries.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('complainant_id', 'delivery_id', name='uq_reporter_delivery_report'),
    sa.UniqueConstraint('complainant_id', 'order_id', 'defendant_id', name='uq_reporter_order_report')
    )
    op.create_table('messages',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('message_type', sa.Enum('BROADCAST', 'REPORT', name='messagetype'), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('complainant_id', sa.Uuid(), nullable=True),
    sa.Column('defendant_id', sa.Uuid(), nullable=True),
    sa.Column('admin_id', sa.Uuid(), nullable=True),
    sa.Column('report_id', sa.Uuid(), nullable=True),
    sa.Column('role', sa.Enum('CUSTOMER', 'DISPATCH', 'RESTAURANT_VENDOR', 'LAUNDRY_VENDOR', 'RIDER', 'ADMIN', name='usertype'), nullable=True),
    sa.Column('target_user_id', sa.Uuid(), nullable=True),
    sa.Column('is_global', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['complainant_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['defendant_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ),
    sa.ForeignKeyConstraint(['target_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message_read_status',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('message_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('read', sa.Boolean(), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('notifications')
    op.drop_table('issues')
    op.drop_table('notification_recipients')
    op.drop_table('notification_messages')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification_messages',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('notification_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('sender_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('sender_role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['notification_id'], ['notifications.id'], name='notification_messages_notification_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name='notification_messages_sender_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='notification_messages_pkey')
    )
    op.create_table('notification_recipients',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('notification_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('recipient_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['notification_id'], ['notifications.id'], name='notification_recipients_notification_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], name='notification_recipients_recipient_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='notification_recipients_pkey'),
    sa.UniqueConstraint('notification_id', 'recipient_id', name='uq_notification_recipient')
    )
    op.create_table('issues',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('order_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('delivery_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('dispatch_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('vendor_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('customer_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('reporter_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('issue_type', postgresql.ENUM('DAMAGED_ITEMS', 'WRONG_ITEMS', 'LATE_DELIVERY', 'RIDER_BEHAVIOUR', 'CUSTOMER_BEHAVIOUR', 'OTHERS', name='issuetype'), autoincrement=False, nullable=False),
    sa.Column('issue_status', postgresql.ENUM('PENDING', 'INVESTIGATING', 'RESOLVED', 'DISMISSED', name='issuestatus'), autoincrement=False, nullable=False),
    sa.Column('report_type', postgresql.ENUM('VENDOR', 'CUSTOMER', 'DISPATCH', name='reporttype'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['users.id'], name='issues_customer_id_fkey'),
    sa.ForeignKeyConstraint(['delivery_id'], ['deliveries.id'], name='issues_delivery_id_fkey'),
    sa.ForeignKeyConstraint(['dispatch_id'], ['users.id'], name='issues_dispatch_id_fkey'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name='issues_order_id_fkey'),
    sa.ForeignKeyConstraint(['reporter_id'], ['users.id'], name='issues_reporter_id_fkey'),
    sa.ForeignKeyConstraint(['vendor_id'], ['users.id'], name='issues_vendor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='issues_pkey'),
    sa.UniqueConstraint('reporter_id', 'delivery_id', 'dispatch_id', name='uq_reporter_delivery_report'),
    sa.UniqueConstraint('reporter_id', 'order_id', 'vendor_id', name='uq_reporter_order_report'),
    postgresql_ignore_search_path=False
    )
    op.create_table('notifications',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('notification_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('recipient_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('report_issue_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('sender_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_broadcast', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], name='notifications_recipient_id_fkey'),
    sa.ForeignKeyConstraint(['report_issue_id'], ['issues.id'], name='notifications_report_issue_id_fkey'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name='notifications_sender_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    op.drop_table('message_read_status')
    op.drop_table('messages')
    op.drop_table('reports')
    # ### end Alembic commands ###
