"""category_type to category

Revision ID: 53cfd6503d44
Revises: 6eb54000089d
Create Date: 2025-06-12 12:09:38.012036

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '53cfd6503d44'
down_revision: Union[str, None] = '6eb54000089d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None



def upgrade() -> None:
    """Upgrade schema."""
    # Create enum type first, then add column
    op.execute("CREATE TYPE categorytype AS ENUM ('FOOD', 'PRODUCT')")
    op.add_column('categories', sa.Column('category_type', postgresql.ENUM('FOOD', 'PRODUCT', name='categorytype'), nullable=True, server_default='FOOD'))
    
    # Update existing records
    op.execute("UPDATE categories SET category_type = 'FOOD' WHERE category_type IS NULL")
    
    op.create_unique_constraint(None, 'profile', ['user_id'])
    op.create_unique_constraint(None, 'profile_images', ['profile_id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'profile_images', type_='unique')
    op.drop_constraint(None, 'profile', type_='unique')
    op.drop_column('categories', 'category_type')
    # ### end Alembic commands ###
